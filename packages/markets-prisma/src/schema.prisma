generator client {
  provider = "prisma-client-js"
  output = "./client"
}

generator zod {
  provider       = "zod-prisma-types"
  output = "./zod"
  useMultipleFiles = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExchangeCode {
  OKX
}

model Exchange {
  code   ExchangeCode   @id()
  name   String
  markets Market[]
}

model Market {
  symbol       String
  exchangeCode ExchangeCode
  updatedAt    DateTime      @updatedAt

  timeframes MarketTimeframe[]

  exchange     Exchange      @relation(fields: [exchangeCode], references: [code])

  @@id([symbol, exchangeCode], name: "id")
}

model MarketTimeframe {
  timeframe String

  marketSymbol String
  marketExchangeCode ExchangeCode
  market Market @relation(fields: [marketSymbol, marketExchangeCode], references: [symbol, exchangeCode], onDelete: Cascade)

  candlesticks Candlestick[]

  // Mean that the oldest candle was saved to DB
  historyEndReached Boolean @default(false)

  @@id([timeframe, marketSymbol, marketExchangeCode], name: "id")
}

model Candlestick {
  timeframe          String
  timestamp          DateTime
  marketSymbol       String
  marketExchangeCode ExchangeCode
  open               Float
  high               Float
  low                Float
  close              Float
  market             MarketTimeframe @relation(fields: [marketSymbol, marketExchangeCode, timeframe], references: [marketSymbol, marketExchangeCode, timeframe], onDelete: Cascade)

  @@id([timeframe, timestamp, marketSymbol, marketExchangeCode], name: "id")
}
