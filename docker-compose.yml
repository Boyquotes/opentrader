version: "3.8"

services:
  monolith:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        NEXT_PUBLIC_PROCESSOR_URL: http://localhost:4000
        NEXT_PUBLIC_PROCESSOR_ENABLE_TRPC: "true"
        NEXT_PUBLIC_STATIC: "true"
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/postgres
      NEXT_PUBLIC_PROCESSOR_URL: http://localhost:4000
      NEXT_PUBLIC_PROCESSOR_ENABLE_TRPC: "true"
      NEXT_PUBLIC_STATIC: "true"
      ADMIN_PASSWORD: opentrader
    depends_on:
      - database
  processor:
    build:
      context: .
      dockerfile: apps/processor/Dockerfile
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/postgres
      NEXT_PUBLIC_PROCESSOR_URL: http://localhost:4000
      NEXT_PUBLIC_PROCESSOR_ENABLE_TRPC: "true"
      ADMIN_PASSWORD: opentrader
    depends_on:
      - database
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        NEXT_PUBLIC_PROCESSOR_URL: http://localhost:4000
        NEXT_PUBLIC_PROCESSOR_ENABLE_TRPC: "true"
      network: host
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@database:5432/postgres
      NEXT_PUBLIC_PROCESSOR_URL: http://localhost:4000
      NEXT_PUBLIC_PROCESSOR_ENABLE_TRPC: "true"
      ADMIN_PASSWORD: opentrader
    depends_on:
      - database
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
volumes:
  postgres-db:
