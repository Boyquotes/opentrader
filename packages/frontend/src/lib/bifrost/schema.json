{
  "openapi": "3.0.0",
  "paths": {
    "/bapi/grid-bot": {
      "get": {
        "operationId": "getBots",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBotsListResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/info/{id}": {
      "get": {
        "operationId": "getBot",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBotResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/create": {
      "post": {
        "operationId": "createBot",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBotRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBotResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/start/{id}": {
      "put": {
        "operationId": "startBot",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartBotResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/stop/{id}": {
      "put": {
        "operationId": "stopBot",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopBotResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/sync": {
      "patch": {
        "operationId": "syncMarketOrders",
        "parameters": [
          {
            "name": "botId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncBotResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/current-asset-price/{baseCurrency}/{quoteCurrency}": {
      "get": {
        "operationId": "currentAssetPrice",
        "parameters": [
          {
            "name": "baseCurrency",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "quoteCurrency",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/{id}/completed-deals": {
      "get": {
        "operationId": "getCompletedDeals",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompletedDealsResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi/grid-bot/{id}/events": {
      "get": {
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Grid Bot"]
      }
    },
    "/bapi": {
      "get": {
        "operationId": "getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/bapi/healthz": {
      "get": {
        "operationId": "healthCheck",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/bapi/exchange-accounts/accounts": {
      "get": {
        "operationId": "getAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExchangeAccountsResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Exchange Accounts"]
      }
    },
    "/bapi/exchange-accounts/account/{id}": {
      "get": {
        "operationId": "getAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExchangeAccountResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Exchange Accounts"]
      },
      "put": {
        "operationId": "updateAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExchangeAccountRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateExchangeAccountResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Exchange Accounts"]
      }
    },
    "/bapi/exchange-accounts/account": {
      "post": {
        "operationId": "createAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExchangeAccountRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExchangeAccountResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["Exchange Accounts"]
      }
    },
    "/bapi/marketplace/signal": {
      "get": {
        "operationId": "signal",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "tweet.fields",
            "required": true,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signals": {
      "get": {
        "operationId": "signals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTwitterSignalsListResponseBodyDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createSignal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTwitterSignalRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTwitterSignalResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signals/{signalId}/events": {
      "get": {
        "operationId": "specificSignalEvents",
        "parameters": [
          {
            "name": "signalId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTwitterSignalEventsListResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signals/{id}": {
      "get": {
        "operationId": "signal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTwitterSignalResponseBodyDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateSignal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTwitterSignalRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTwitterSignalResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signals/{id}/parse": {
      "patch": {
        "operationId": "parseTweetsBySignal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseTweetsBySignalResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signal/events": {
      "get": {
        "operationId": "signalEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTwitterSignalEventsListResponseBodyDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createSignalEvent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTwitterSignalEventRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTwitterSignalEventResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signal/events/active": {
      "get": {
        "operationId": "activeSignalEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTwitterSignalEventsListResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/marketplace/twitter/signal/events/{id}": {
      "get": {
        "operationId": "signalEvent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTwitterSignalEventResponseBodyDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateSignalEvent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTwitterSignalEventRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTwitterSignalEventResponseBodyDto"
                }
              }
            }
          }
        }
      }
    },
    "/bapi/experiments/3c-tweet-trading/signal-events": {
      "get": {
        "operationId": "signalEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TwitterSignalEventDto"
                  }
                }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/active-signal-events": {
      "get": {
        "operationId": "activeSignalEvents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TwitterSignalEventDto"
                  }
                }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/smart-trades-history": {
      "get": {
        "operationId": "smartTradesHistory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "object" } }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/bots": {
      "get": {
        "operationId": "getAllBots",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TweetTradingBotDto" }
                }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/bot/{id}": {
      "get": {
        "operationId": "getBot",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TweetTradingBotDto" }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/bot/create": {
      "post": {
        "operationId": "createBot",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTweetTradingBotDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TweetTradingBotDto" }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/bot/update/{id}": {
      "put": {
        "operationId": "updateBot",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTweetTradingBotDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TweetTradingBotDto" }
              }
            }
          }
        },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/experiments/3c-tweet-trading/run-matching": {
      "get": {
        "operationId": "runMatching",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Experiments / Tweet Trading"]
      }
    },
    "/bapi/3commas-accounts/accounts": {
      "get": {
        "operationId": "getAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get3CommasAccountsResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["3Commas Accounts"]
      }
    },
    "/bapi/3commas-accounts/account/{id}": {
      "get": {
        "operationId": "getAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get3CommasAccountResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["3Commas Accounts"]
      },
      "put": {
        "operationId": "updateAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update3CommasAccountRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update3CommasAccountResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["3Commas Accounts"]
      }
    },
    "/bapi/3commas-accounts/account": {
      "post": {
        "operationId": "createAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create3CommasAccountRequestBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create3CommasAccountResponseBodyDto"
                }
              }
            }
          }
        },
        "tags": ["3Commas Accounts"]
      }
    }
  },
  "info": {
    "title": "Bifrost Swagger UI",
    "description": "Bifrost API Schema <a href=\"/bapi/swagger-json\" target=\"_blank\">schema.json</a>",
    "version": "dev",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "BuyOrderIdleEntity": {
        "type": "object",
        "properties": {
          "clientOrderId": { "type": "string" },
          "price": { "type": "number" },
          "fee": { "type": "number" },
          "side": { "type": "number", "enum": [] },
          "status": { "type": "number", "enum": [] }
        },
        "required": ["clientOrderId", "price", "fee", "side", "status"]
      },
      "SellOrderIdleEntity": {
        "type": "object",
        "properties": {
          "clientOrderId": { "type": "string" },
          "price": { "type": "number" },
          "fee": { "type": "number" },
          "side": { "type": "number", "enum": [] },
          "status": { "type": "number", "enum": [] }
        },
        "required": ["clientOrderId", "price", "fee", "side", "status"]
      },
      "DealIdleEntity": {
        "type": "object",
        "properties": {
          "buyOrder": { "$ref": "#/components/schemas/BuyOrderIdleEntity" },
          "sellOrder": { "$ref": "#/components/schemas/SellOrderIdleEntity" },
          "status": {
            "type": "string",
            "enum": [
              "Idle",
              "BuyPlaced",
              "BuyFilled",
              "SellPlaced",
              "SellFilled"
            ]
          },
          "id": { "type": "string" },
          "quantity": { "type": "number" }
        },
        "required": ["buyOrder", "sellOrder", "status", "id", "quantity"]
      },
      "BuyOrderPlacedEntity": {
        "type": "object",
        "properties": {
          "clientOrderId": { "type": "string" },
          "price": { "type": "number" },
          "fee": { "type": "number" },
          "side": { "type": "number", "enum": [] },
          "status": { "type": "number", "enum": [] }
        },
        "required": ["clientOrderId", "price", "fee", "side", "status"]
      },
      "DealBuyPlacedEntity": {
        "type": "object",
        "properties": {
          "buyOrder": { "$ref": "#/components/schemas/BuyOrderPlacedEntity" },
          "sellOrder": { "$ref": "#/components/schemas/SellOrderIdleEntity" },
          "status": {
            "type": "string",
            "enum": [
              "Idle",
              "BuyPlaced",
              "BuyFilled",
              "SellPlaced",
              "SellFilled"
            ]
          },
          "id": { "type": "string" },
          "quantity": { "type": "number" }
        },
        "required": ["buyOrder", "sellOrder", "status", "id", "quantity"]
      },
      "BuyOrderFilledEntity": {
        "type": "object",
        "properties": {
          "clientOrderId": { "type": "string" },
          "price": { "type": "number" },
          "fee": { "type": "number" },
          "side": { "type": "number", "enum": [] },
          "status": { "type": "number", "enum": [] }
        },
        "required": ["clientOrderId", "price", "fee", "side", "status"]
      },
      "DealBuyFilledEntity": {
        "type": "object",
        "properties": {
          "buyOrder": { "$ref": "#/components/schemas/BuyOrderFilledEntity" },
          "sellOrder": { "$ref": "#/components/schemas/SellOrderIdleEntity" },
          "status": {
            "type": "string",
            "enum": [
              "Idle",
              "BuyPlaced",
              "BuyFilled",
              "SellPlaced",
              "SellFilled"
            ]
          },
          "id": { "type": "string" },
          "quantity": { "type": "number" }
        },
        "required": ["buyOrder", "sellOrder", "status", "id", "quantity"]
      },
      "SellOrderPlacedEntity": {
        "type": "object",
        "properties": {
          "clientOrderId": { "type": "string" },
          "price": { "type": "number" },
          "fee": { "type": "number" },
          "side": { "type": "number", "enum": [] },
          "status": { "type": "number", "enum": [] }
        },
        "required": ["clientOrderId", "price", "fee", "side", "status"]
      },
      "DealSellPlacedEntity": {
        "type": "object",
        "properties": {
          "buyOrder": { "$ref": "#/components/schemas/BuyOrderFilledEntity" },
          "sellOrder": { "$ref": "#/components/schemas/SellOrderPlacedEntity" },
          "status": {
            "type": "string",
            "enum": [
              "Idle",
              "BuyPlaced",
              "BuyFilled",
              "SellPlaced",
              "SellFilled"
            ]
          },
          "id": { "type": "string" },
          "quantity": { "type": "number" }
        },
        "required": ["buyOrder", "sellOrder", "status", "id", "quantity"]
      },
      "SellOrderFilledEntity": {
        "type": "object",
        "properties": {
          "clientOrderId": { "type": "string" },
          "price": { "type": "number" },
          "fee": { "type": "number" },
          "side": { "type": "number", "enum": [] },
          "status": { "type": "number", "enum": [] }
        },
        "required": ["clientOrderId", "price", "fee", "side", "status"]
      },
      "DealSellFilledEntity": {
        "type": "object",
        "properties": {
          "buyOrder": { "$ref": "#/components/schemas/BuyOrderFilledEntity" },
          "sellOrder": { "$ref": "#/components/schemas/SellOrderFilledEntity" },
          "status": {
            "type": "string",
            "enum": [
              "Idle",
              "BuyPlaced",
              "BuyFilled",
              "SellPlaced",
              "SellFilled"
            ]
          },
          "id": { "type": "string" },
          "quantity": { "type": "number" }
        },
        "required": ["buyOrder", "sellOrder", "status", "id", "quantity"]
      },
      "GridLineDto": {
        "type": "object",
        "properties": {
          "price": { "type": "number" },
          "quantity": { "type": "number" }
        },
        "required": ["price", "quantity"]
      },
      "BaseCurrencyInvestmentDto": {
        "type": "object",
        "properties": {
          "quantity": { "type": "number" },
          "price": { "type": "number" }
        },
        "required": ["quantity", "price"]
      },
      "QuoteCurrencyInvestmentDto": {
        "type": "object",
        "properties": { "quantity": { "type": "number" } },
        "required": ["quantity"]
      },
      "InitialInvestmentDto": {
        "type": "object",
        "properties": {
          "baseCurrency": {
            "$ref": "#/components/schemas/BaseCurrencyInvestmentDto"
          },
          "quoteCurrency": {
            "$ref": "#/components/schemas/QuoteCurrencyInvestmentDto"
          }
        },
        "required": ["baseCurrency", "quoteCurrency"]
      },
      "GridBotDto": {
        "type": "object",
        "properties": {
          "gridLines": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GridLineDto" }
          },
          "deals": {
            "type": "array",
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/DealIdleEntity" },
                { "$ref": "#/components/schemas/DealBuyPlacedEntity" },
                { "$ref": "#/components/schemas/DealBuyFilledEntity" },
                { "$ref": "#/components/schemas/DealSellPlacedEntity" },
                { "$ref": "#/components/schemas/DealSellFilledEntity" }
              ]
            }
          },
          "initialInvestment": {
            "$ref": "#/components/schemas/InitialInvestmentDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "baseCurrency": { "type": "string" },
          "quoteCurrency": { "type": "string" },
          "enabled": { "type": "boolean" },
          "createdAt": { "type": "number" },
          "userId": { "type": "string" },
          "exchangeAccountId": { "type": "string" }
        },
        "required": [
          "gridLines",
          "deals",
          "initialInvestment",
          "id",
          "name",
          "baseCurrency",
          "quoteCurrency",
          "enabled",
          "createdAt",
          "userId",
          "exchangeAccountId"
        ]
      },
      "GetBotsListResponseDto": {
        "type": "object",
        "properties": {
          "bots": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GridBotDto" }
          }
        },
        "required": ["bots"]
      },
      "GetBotResponseBodyDto": {
        "type": "object",
        "properties": { "bot": { "$ref": "#/components/schemas/GridBotDto" } },
        "required": ["bot"]
      },
      "CreateBotRequestBodyDto": {
        "type": "object",
        "properties": {
          "gridLines": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GridLineDto" }
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "baseCurrency": { "type": "string" },
          "quoteCurrency": { "type": "string" },
          "exchangeAccountId": { "type": "string" }
        },
        "required": [
          "gridLines",
          "id",
          "name",
          "baseCurrency",
          "quoteCurrency",
          "exchangeAccountId"
        ]
      },
      "CreateBotResponseBodyDto": {
        "type": "object",
        "properties": { "bot": { "$ref": "#/components/schemas/GridBotDto" } },
        "required": ["bot"]
      },
      "StartBotResponseBodyDto": {
        "type": "object",
        "properties": {
          "bot": { "$ref": "#/components/schemas/GridBotDto" },
          "currentAssetPrice": { "type": "number" }
        },
        "required": ["bot", "currentAssetPrice"]
      },
      "StopBotResponseBodyDto": {
        "type": "object",
        "properties": {
          "botId": { "type": "string" },
          "message": { "type": "string" }
        },
        "required": ["botId", "message"]
      },
      "SyncedOrderDto": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["idle", "placed", "filled"] },
          "price": { "type": "number" },
          "current": { "type": "boolean" }
        },
        "required": ["status", "price", "current"]
      },
      "SyncedDealDto": {
        "type": "object",
        "properties": {
          "dealId": { "type": "string" },
          "buyOrder": { "$ref": "#/components/schemas/SyncedOrderDto" },
          "sellOrder": { "$ref": "#/components/schemas/SyncedOrderDto" }
        },
        "required": ["dealId"]
      },
      "PlacedOrderDto": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["idle", "placed", "filled"] },
          "price": { "type": "number" }
        },
        "required": ["status", "price"]
      },
      "PlacedDealDto": {
        "type": "object",
        "properties": {
          "buyOrder": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/PlacedOrderDto" }]
          },
          "sellOrder": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/PlacedOrderDto" }]
          }
        },
        "required": ["buyOrder", "sellOrder"]
      },
      "SyncBotResponseBodyDto": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "currentAssetPrice": { "type": "number" },
          "filledOrders": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncedDealDto" }
          },
          "placedOrders": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PlacedDealDto" }
          }
        },
        "required": [
          "message",
          "currentAssetPrice",
          "filledOrders",
          "placedOrders"
        ]
      },
      "CompletedDealBuyOrderEntity": {
        "type": "object",
        "properties": { "price": { "type": "number" } },
        "required": ["price"]
      },
      "CompletedDealSellOrderEntity": {
        "type": "object",
        "properties": { "price": { "type": "number" } },
        "required": ["price"]
      },
      "CompletedDealWithProfitDto": {
        "type": "object",
        "properties": {
          "buyOrder": {
            "$ref": "#/components/schemas/CompletedDealBuyOrderEntity"
          },
          "sellOrder": {
            "$ref": "#/components/schemas/CompletedDealSellOrderEntity"
          },
          "grossProfit": { "type": "number" },
          "netProfit": { "type": "number" },
          "id": { "type": "string" },
          "quantity": { "type": "number" },
          "createdAt": { "type": "number" },
          "botId": { "type": "string" }
        },
        "required": [
          "buyOrder",
          "sellOrder",
          "grossProfit",
          "netProfit",
          "id",
          "quantity",
          "createdAt",
          "botId"
        ]
      },
      "GetCompletedDealsResponseBodyDto": {
        "type": "object",
        "properties": {
          "completedDeals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompletedDealWithProfitDto"
            }
          }
        },
        "required": ["completedDeals"]
      },
      "ExchangeCode": { "type": "string", "enum": ["okx"] },
      "ExchangeCredentialsDto": {
        "type": "object",
        "properties": {
          "code": { "$ref": "#/components/schemas/ExchangeCode" },
          "apiKey": { "type": "string" },
          "secretKey": { "type": "string" },
          "passphrase": { "type": "string" },
          "isDemoAccount": { "type": "boolean" }
        },
        "required": [
          "code",
          "apiKey",
          "secretKey",
          "passphrase",
          "isDemoAccount"
        ]
      },
      "ExchangeAccountDto": {
        "type": "object",
        "properties": {
          "exchangeCode": { "$ref": "#/components/schemas/ExchangeCode" },
          "credentials": {
            "$ref": "#/components/schemas/ExchangeCredentialsDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "userId": { "type": "string" },
          "createdAt": { "type": "number" }
        },
        "required": [
          "exchangeCode",
          "credentials",
          "id",
          "name",
          "userId",
          "createdAt"
        ]
      },
      "GetExchangeAccountsResponseBodyDto": {
        "type": "object",
        "properties": {
          "exchangeAccounts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExchangeAccountDto" }
          }
        },
        "required": ["exchangeAccounts"]
      },
      "GetExchangeAccountResponseBodyDto": {
        "type": "object",
        "properties": {
          "exchangeAccount": {
            "$ref": "#/components/schemas/ExchangeAccountDto"
          }
        },
        "required": ["exchangeAccount"]
      },
      "UpdateExchangeAccountRequestBodyDto": {
        "type": "object",
        "properties": {
          "exchangeCode": { "$ref": "#/components/schemas/ExchangeCode" },
          "credentials": {
            "$ref": "#/components/schemas/ExchangeCredentialsDto"
          },
          "name": { "type": "string" }
        },
        "required": ["exchangeCode", "credentials", "name"]
      },
      "UpdateExchangeAccountResponseBodyDto": {
        "type": "object",
        "properties": {
          "exchangeAccount": {
            "$ref": "#/components/schemas/ExchangeAccountDto"
          }
        },
        "required": ["exchangeAccount"]
      },
      "CreateExchangeAccountRequestBodyDto": {
        "type": "object",
        "properties": {
          "exchangeCode": { "$ref": "#/components/schemas/ExchangeCode" },
          "credentials": {
            "$ref": "#/components/schemas/ExchangeCredentialsDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["exchangeCode", "credentials", "id", "name"]
      },
      "CreateExchangeAccountResponseBodyDto": {
        "type": "object",
        "properties": {
          "exchangeAccount": {
            "$ref": "#/components/schemas/ExchangeAccountDto"
          }
        },
        "required": ["exchangeAccount"]
      },
      "TweetCoinEntity": {
        "type": "object",
        "properties": {
          "baseCurrency": { "type": "string" },
          "quoteCurrency": { "type": "string" }
        },
        "required": ["baseCurrency", "quoteCurrency"]
      },
      "TwitterSignalDto": {
        "type": "object",
        "properties": {
          "twitterQuery": {
            "type": "string",
            "description": "The `query` parameter that is passed to the Twitter API"
          },
          "enabled": {
            "type": "boolean",
            "description": "Should cron watch for this signal?"
          },
          "coin": { "$ref": "#/components/schemas/TweetCoinEntity" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "createdAt": { "type": "number" }
        },
        "required": [
          "twitterQuery",
          "enabled",
          "coin",
          "id",
          "name",
          "description",
          "createdAt"
        ]
      },
      "GetTwitterSignalsListResponseBodyDto": {
        "type": "object",
        "properties": {
          "signals": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TwitterSignalDto" }
          }
        },
        "required": ["signals"]
      },
      "TweetBriefEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "text": { "type": "string" },
          "author_id": { "type": "string" },
          "created_at": { "type": "string" }
        },
        "required": ["id", "text", "author_id", "created_at"]
      },
      "TwitterSignalEventDto": {
        "type": "object",
        "properties": {
          "tweet": { "$ref": "#/components/schemas/TweetBriefEntity" },
          "coin": { "$ref": "#/components/schemas/TweetCoinEntity" },
          "id": { "type": "string" },
          "signalId": { "type": "string" },
          "parsedAt": { "type": "string" }
        },
        "required": ["tweet", "coin", "id", "signalId", "parsedAt"]
      },
      "GetTwitterSignalEventsListResponseBodyDto": {
        "type": "object",
        "properties": {
          "signalEvents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TwitterSignalEventDto" }
          }
        },
        "required": ["signalEvents"]
      },
      "GetTwitterSignalResponseBodyDto": {
        "type": "object",
        "properties": {
          "signal": { "$ref": "#/components/schemas/TwitterSignalDto" }
        },
        "required": ["signal"]
      },
      "CreateTwitterSignalRequestBodyDto": {
        "type": "object",
        "properties": {
          "twitterQuery": {
            "type": "string",
            "description": "The `query` parameter that is passed to the Twitter API"
          },
          "enabled": {
            "type": "boolean",
            "description": "Should cron watch for this signal?"
          },
          "coin": { "$ref": "#/components/schemas/TweetCoinEntity" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": [
          "twitterQuery",
          "enabled",
          "coin",
          "id",
          "name",
          "description"
        ]
      },
      "CreateTwitterSignalResponseBodyDto": {
        "type": "object",
        "properties": {
          "signal": { "$ref": "#/components/schemas/TwitterSignalDto" }
        },
        "required": ["signal"]
      },
      "UpdateTwitterSignalRequestBodyDto": {
        "type": "object",
        "properties": {
          "twitterQuery": {
            "type": "string",
            "description": "The `query` parameter that is passed to the Twitter API"
          },
          "enabled": {
            "type": "boolean",
            "description": "Should cron watch for this signal?"
          },
          "coin": { "$ref": "#/components/schemas/TweetCoinEntity" },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": [
          "twitterQuery",
          "enabled",
          "coin",
          "id",
          "name",
          "description"
        ]
      },
      "UpdateTwitterSignalResponseBodyDto": {
        "type": "object",
        "properties": {
          "signal": { "$ref": "#/components/schemas/TwitterSignalDto" }
        },
        "required": ["signal"]
      },
      "RecentTweetDto": {
        "type": "object",
        "properties": {
          "author_id": { "type": "string" },
          "id": { "type": "string" },
          "text": { "type": "string" },
          "created_at": { "type": "string" }
        },
        "required": ["author_id", "id", "text", "created_at"]
      },
      "ParseTweetsBySignalResponseBodyDto": {
        "type": "object",
        "properties": {
          "parsedTweets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RecentTweetDto" }
          }
        },
        "required": ["parsedTweets"]
      },
      "GetTwitterSignalEventResponseBodyDto": {
        "type": "object",
        "properties": {
          "signalEvent": {
            "$ref": "#/components/schemas/TwitterSignalEventDto"
          }
        },
        "required": ["signalEvent"]
      },
      "CreateTwitterSignalEventRequestBodyDto": {
        "type": "object",
        "properties": {
          "tweet": { "$ref": "#/components/schemas/TweetBriefEntity" },
          "coin": { "$ref": "#/components/schemas/TweetCoinEntity" },
          "id": { "type": "string" },
          "signalId": { "type": "string" }
        },
        "required": ["tweet", "coin", "id", "signalId"]
      },
      "CreateTwitterSignalEventResponseBodyDto": {
        "type": "object",
        "properties": {
          "signalEvent": {
            "$ref": "#/components/schemas/TwitterSignalEventDto"
          }
        },
        "required": ["signalEvent"]
      },
      "UpdateTwitterSignalEventRequestBodyDto": {
        "type": "object",
        "properties": {
          "tweet": { "$ref": "#/components/schemas/TweetBriefEntity" },
          "coin": { "$ref": "#/components/schemas/TweetCoinEntity" },
          "id": { "type": "string" },
          "signalId": { "type": "string" }
        },
        "required": ["tweet", "coin", "id", "signalId"]
      },
      "UpdateTwitterSignalEventResponseBodyDto": {
        "type": "object",
        "properties": {
          "signalEvent": {
            "$ref": "#/components/schemas/TwitterSignalEventDto"
          }
        },
        "required": ["signalEvent"]
      },
      "TweetTradingBotSmartTradeSettingsDto": {
        "type": "object",
        "properties": {
          "accountId": { "type": "number", "description": "3commas accountId" },
          "volume": { "type": "number", "description": "Volume to buy" },
          "takeProfitPercent": { "type": "number" },
          "stopLossPercent": { "type": "number" },
          "baseCurrency": { "type": "string" },
          "quoteCurrency": { "type": "string" },
          "note": { "type": "string" }
        },
        "required": [
          "accountId",
          "volume",
          "takeProfitPercent",
          "stopLossPercent",
          "baseCurrency",
          "quoteCurrency",
          "note"
        ]
      },
      "TweetTradingBotDto": {
        "type": "object",
        "properties": {
          "smartTradeSettings": {
            "$ref": "#/components/schemas/TweetTradingBotSmartTradeSettingsDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "enabled": { "type": "boolean" },
          "watchSignalsIds": { "type": "array", "items": { "type": "string" } },
          "usedSignalEventsIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "createdAt": { "type": "string" }
        },
        "required": [
          "smartTradeSettings",
          "id",
          "name",
          "enabled",
          "watchSignalsIds",
          "usedSignalEventsIds",
          "createdAt"
        ]
      },
      "CreateTweetTradingBotDto": {
        "type": "object",
        "properties": {
          "smartTradeSettings": {
            "$ref": "#/components/schemas/TweetTradingBotSmartTradeSettingsDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "enabled": { "type": "boolean" },
          "watchSignalsIds": { "type": "array", "items": { "type": "string" } },
          "usedSignalEventsIds": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": [
          "smartTradeSettings",
          "id",
          "name",
          "enabled",
          "watchSignalsIds",
          "usedSignalEventsIds"
        ]
      },
      "UpdateTweetTradingBotDto": {
        "type": "object",
        "properties": {
          "smartTradeSettings": {
            "$ref": "#/components/schemas/TweetTradingBotSmartTradeSettingsDto"
          },
          "name": { "type": "string" },
          "enabled": { "type": "boolean" },
          "watchSignalsIds": { "type": "array", "items": { "type": "string" } },
          "usedSignalEventsIds": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": [
          "smartTradeSettings",
          "name",
          "enabled",
          "watchSignalsIds",
          "usedSignalEventsIds"
        ]
      },
      "ThreeCommasAccountCredentialsDto": {
        "type": "object",
        "properties": {
          "isPaperAccount": {
            "type": "boolean",
            "description": "If set to `true` then Paper Account will be used, otherwise Real Account will be used."
          },
          "apiKey": { "type": "string" },
          "secretKey": { "type": "string" }
        },
        "required": ["isPaperAccount", "apiKey", "secretKey"]
      },
      "ThreeCommasAccountDto": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/ThreeCommasAccountCredentialsDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" },
          "userId": { "type": "string" },
          "createdAt": { "type": "number" }
        },
        "required": ["credentials", "id", "name", "userId", "createdAt"]
      },
      "Get3CommasAccountsResponseBodyDto": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ThreeCommasAccountDto" }
          }
        },
        "required": ["accounts"]
      },
      "Get3CommasAccountResponseBodyDto": {
        "type": "object",
        "properties": {
          "account": { "$ref": "#/components/schemas/ThreeCommasAccountDto" }
        },
        "required": ["account"]
      },
      "Update3CommasAccountRequestBodyDto": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/ThreeCommasAccountCredentialsDto"
          },
          "name": { "type": "string" }
        },
        "required": ["credentials", "name"]
      },
      "Update3CommasAccountResponseBodyDto": {
        "type": "object",
        "properties": {
          "account": { "$ref": "#/components/schemas/ThreeCommasAccountDto" }
        },
        "required": ["account"]
      },
      "Create3CommasAccountRequestBodyDto": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/ThreeCommasAccountCredentialsDto"
          },
          "id": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["credentials", "id", "name"]
      },
      "Create3CommasAccountResponseBodyDto": {
        "type": "object",
        "properties": {
          "account": { "$ref": "#/components/schemas/ThreeCommasAccountDto" }
        },
        "required": ["account"]
      }
    }
  }
}
